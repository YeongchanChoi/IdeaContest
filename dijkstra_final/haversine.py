from math import radians, cos, sin, asin, sqrt

# Haversine 공식을 사용하여 두 지점 간의 거리 계산 (단위: km)
def haversine(lon1, lat1, lon2, lat2):
    R = 6371.0  # 지구의 반경(km)
    lon1, lat1, lon2, lat2 = map(radians, [lon1, lat1, lon2, lat2])
    dlon = lon2 - lon1
    dlat = lat2 - lat1
    a = sin(dlat/2)**2 + cos(lat1) * cos(lat2) * sin(dlon/2)**2
    c = 2 * asin(sqrt(a))
    distance = R * c
    return distance

# 노드 정보
nodes = {
    30: (37.447720, 126.659337),
    19: (37.451384, 126.650712),
    2: (37.450559, 126.653770),
    4: (37.451125, 126.654314),
    38: (37.450831, 126.654524),
    37: (37.449158, 126.655874),
    35: (37.449663, 126.657140),
    34: (37.450641, 126.657802),
    33: (37.451391, 126.654898),
    32: (37.449339, 126.655378),
    31: (37.450036, 126.653568),
    29: (37.450624, 126.656893),
    5: (37.450309, 126.654807),
    6: (37.450769, 126.655774),
    7: (37.450837, 126.655059),
    8: (37.450895, 126.656019),
    10: (37.449839, 126.655449),
    11: (37.449940, 126.654944),
    12: (37.448956, 126.654645),
    13: (37.449245, 126.653978),
    14: (37.449546, 126.652967),
    15: (37.450477, 126.652943),
    17: (37.451031, 126.651936),
    20: (37.448254, 126.652253),
    21: (37.447377, 126.654205),
    22: (37.447320, 126.655358),
    23: (37.448153, 126.655990),
    24: (37.448612, 126.655868),
    25: (37.449955, 126.656393),
    26: (37.449053, 126.656355),
    28: (37.450236, 126.656968)
}

# 간선 정보
edges = [
    (2, 4), (4, 33), (33, 38), (38, 7), (38, 6), (38, 5), (33, 8), (8, 10),
    (8, 29), (8, 25), (25, 28), (28, 29), (25, 29), (8, 34), (34, 35), (25, 26),
    (26, 35), (26, 37), (37, 24), (23, 24), (30, 35), (24, 22), (24, 21), 
    (37, 32), (37, 25), (10, 32), (32, 21), (21, 20), (20, 14), (14, 13), 
    (13, 12), (12, 24), (20, 15), (14, 31), (31, 2), (31, 15), (31, 32),
    (15, 17), (17, 19), (17, 4), (31, 38), (31, 11), (11, 32)
]
